cmake_minimum_required(VERSION 2.8)
PROJECT(photo)
FIND_PACKAGE(Qt4 REQUIRED)

# Link Exiv Libraries
LINK_LIBRARIES(exiv2)

# Set Sources and Headers
SET(photo_SOURCES main.cpp mainwindow.cpp graphicsview.cpp graphicsitem.cpp widgets/aboutwidget.cpp widgets/customconfirm.cpp widgets/dropdownmenu.cpp widgets/dropdownmenuitem.cpp widgets/exifwidget.cpp widgets/filehandling.cpp widgets/startupwidget.cpp thumbnails/thumbnailpixmapitem.cpp thumbnails/thumbnails.cpp thumbnails/thumbnailview.cpp slideshow/slideshowbar.cpp slideshow/slideshowsettings.cpp settings/settings.cpp settings/settingstabexif.cpp settings/settingstabexiftiles.cpp settings/settingstablookandfeel.cpp settings/settingstabother.cpp settings/settingstabothercontext.cpp settings/settingstabothercontexttiles.cpp settings/settingstabotherlanguagetiles.cpp settings/settingstabshortcuts.cpp settings/settingstabshortcutschangecommand.cpp settings/settingstabshortcutskeydetect.cpp settings/settingstabshortcutstiles.cpp settings/settingstabthumbnail.cpp flowlayout/flowlayout.cpp customelements/customcheckbox.cpp customelements/customcombobox.cpp customelements/customlineedit.cpp customelements/custompushbutton.cpp customelements/customradiobutton.cpp customelements/customscrollbar.cpp customelements/customslider.cpp customelements/customspinbox.cpp)
SET(photo_HEADERS mainwindow.h globalsettings.h globalvariables.h shortcuts.h threadforthumbnails.h graphicsview.h graphicsitem.h widgets/aboutwidget.h widgets/customconfirm.h widgets/dropdownmenu.h widgets/dropdownmenuitem.h widgets/exifwidget.h widgets/filehandling.h widgets/startupwidget.h thumbnails/thumbnailpixmapitem.h thumbnails/thumbnails.h thumbnails/thumbnailview.h slideshow/slideshowbar.h slideshow/slideshowsettings.h settings/settings.h settings/settingstabexif.h settings/settingstabexiftiles.h settings/settingstablookandfeel.h settings/settingstabother.h settings/settingstabothercontext.h settings/settingstabothercontexttiles.h settings/settingstabotherlanguagetiles.h settings/settingstabshortcuts.h settings/settingstabshortcutschangecommand.h settings/settingstabshortcutskeydetect.h settings/settingstabshortcutstiles.h settings/settingstabthumbnail.h flowlayout/flowlayout.h customelements/customcheckbox.h customelements/customcombobox.h customelements/customlineedit.h customelements/custompushbutton.h customelements/customradiobutton.h customelements/customscrollbar.h customelements/customslider.h customelements/customspinbox.h)
# Set sources
SET(photo_RESOURCES resLang.qrc resImg.qrc)
# Set type to release
SET(CMAKE_BUILD_TYPE Release)
# and add sql
SET(QT_USE_QTSQL TRUE)
# and add phonon
SET(QT_USE_PHONON TRUE)
SET(QT_PHONON_INCLUDE_DIR /usr/include/phonon)
# moc files
QT4_WRAP_CPP(photo_HEADERS_MOC ${photo_HEADERS})
QT4_ADD_RESOURCES(photo_RESOURCES_RCC ${photo_RESOURCES})

# include, add defiunitions and include dirs
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

# And add the executeable
ADD_EXECUTABLE(photo ${photo_SOURCES} ${photo_HEADERS_MOC} ${photo_RESOURCES_RCC})
TARGET_LINK_LIBRARIES(photo ${QT_LIBRARIES})

if(UNIX)

	# Set the install prefix to /usr/
	SET(PRODUCT_INSTALL_PREFIX /usr)

	# Install executeable
	INSTALL(
		TARGETS photo
		DESTINATION bin/
	)

	# Install desktop file
	INSTALL(
		FILES photo.desktop
		DESTINATION share/applications
	)

	# And install all the icons
	INSTALL(
		FILES icons/16x16/apps/photo.png
		DESTINATION share/icons/hicolor/16x16/apps/
	)
	INSTALL(
		FILES icons/32x32/apps/photo.png
		DESTINATION share/icons//hicolor/32x32/apps/
	)
	INSTALL(
		FILES icons/48x48/apps/photo.png
		DESTINATION share/icons//hicolor/48x48/apps/
	)
	INSTALL(
		FILES icons/64x64/apps/photo.png
		DESTINATION share/icons//hicolor/64x64/apps/
	)
	INSTALL(
		FILES icons/128x128/apps/photo.png
		DESTINATION share/icons//hicolor/128x128/apps/
	)
endif(UNIX)

# uninstall target
configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
    IMMEDIATE @ONLY)

add_custom_target(uninstall
    COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)